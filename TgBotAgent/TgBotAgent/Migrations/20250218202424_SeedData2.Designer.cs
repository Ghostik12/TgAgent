// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TgBotAgent.DB;

#nullable disable

namespace TgBotAgent.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250218202424_SeedData2")]
    partial class SeedData2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TgBotAgent.Models.BlacklistWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BlacklistWords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Word = "спам"
                        });
                });

            modelBuilder.Entity("TgBotAgent.Models.ListAdmins", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChatId = 1451999567L
                        });
                });

            modelBuilder.Entity("TgBotAgent.Models.MessageRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("FromUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ToUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FromUserId = 123456789L,
                            Text = "Привет!",
                            Timestamp = new DateTime(2025, 2, 17, 10, 0, 0, 0, DateTimeKind.Utc),
                            ToUserId = 987654321L
                        },
                        new
                        {
                            Id = 2,
                            FromUserId = 987654321L,
                            Text = "Как дела?",
                            Timestamp = new DateTime(2023, 10, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ToUserId = 123456789L
                        });
                });

            modelBuilder.Entity("TgBotAgent.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Key = "WelcomeMessage",
                            Value = "Добро пожаловать!"
                        });
                });

            modelBuilder.Entity("TgBotAgent.Models.UserLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("UserId1")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId2")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("UserLinks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId1 = 123456789L,
                            UserId2 = 987654321L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
